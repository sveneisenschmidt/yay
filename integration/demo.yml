# ATTENTION
# These integrations were created for testing purpose only, please do not use them in production.
# Rather take them as examples to write and combine your own integrations.
integration:
    imports:
        - demo/levels.yml

    actions:
        demo-action-01:
            label: Demo 01 action label
            description: Demo actions description
        demo-action-02:
            label: Demo 02 action label
            description: Demo actions description

    achievements:
        demo-achievement-01:
            label: Demo achievement label
            description: Demo achievement description
            points: 50
            actions: [demo-action-01, demo-action-02]
        demo-achievement-02:
            label: Demo achievement label
            description: Demo achievement description
            points: 100
            actions: [demo-action-01, demo-action-02]
        demo-achievement-03:
            label: Demo achievement label
            description: Demo achievement description
            points: 200
            actions: [demo-action-01, demo-action-02]
        demo-achievement-04:
            label: Demo achievement label
            description: Demo achievement description
            points: 400
            actions: [demo-action-01, demo-action-02]

    validators:
        # Grants achievement "demo-achievement-01" if action `demo-action`
        # has been performed by the player 5 times.
        demo-achievement-validator-01:
            type: expression
            arguments:
                - "actions.count() >= 5"
                - "(100/5) * actions.count()"
                - ["demo-achievement-01"]
        # Grants achievement "demo-achievement-02" if action `demo-action`
        # has been performed by the player 10 times.
        demo-achievement-validator-02:
            type: expression
            arguments:
                - "actions.count() >= 15"
                - "(100/15) * actions.count()"
                - ["demo-achievement-02"]
        # Grants achievement "demo-achievement-03" if action `demo-action`
        # has been performed by the player 20 times.
        demo-achievement-validator-03:
            type: expression
            arguments:
                - "actions.count() >= 20"
                - "(100/20) * actions.count()"
                - ["demo-achievement-03"]
        # Grants achievement "demo-achievement-04" if action `demo-action`
        # has been performed by the player 30 times.
        demo-achievement-validator-04:
            type: expression
            arguments:
                - "actions.count() >= 30"
                - "(100/30) * actions.count()"
                - ["demo-achievement-04"]

    webhooks:
        incoming_processors:
            # Chains multiple processors
            demo:
                type: chain
                arguments:
                    - [demo-defaults, demo-thirdparty-action, demo-thirdparty-user]
            # Set defaults
            demo-defaults:
                type: dummy
                arguments:
                    - 
                        username: john.smith, 
                        action: demo-action-01 
            # Maps third party action to application action
            demo-thirdparty-action:
                type: static-map
                arguments:
                    - action
                    - 
                        third_party.demo_action: demo-action-02
            # Maps third party username to application username
            demo-thirdparty-user:
                type: static-map
                arguments:
                    - username
                    - 
                        third_party.demo_user: alex.doe
