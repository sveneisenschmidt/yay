dist: trusty
language: generic
sudo: required

addons:
    apt:
        packages:
            - pv

git:
    depth: 1

services:
    - docker

jobs:
  include:
    - stage: "Test"
      before_install:
      - sudo apt-get update
      - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-engine
      - docker --version
      before_script:
      - sed -i -e 's/var\/www\/html:cached/var\/www\/html/g' docker-compose.yml
      - make install 2>&1 "$TRAVIS_BUILD_DIR"/install.log | pv > /dev/null -t
      script:
      - make test-coverage
      after_success:
      - bash <(curl -s https://codecov.io/bash)
      - cat "$TRAVIS_BUILD_DIR"/install.log
    - stage: "Build Docker Images (stable)"
      if: branch = master AND type IN (push, api, cron) AND fork = false
      before_install:
      - sudo apt-get update
      - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-engine
      - docker --version
      before_script:
      - sed -i -e 's/var\/www\/html:cached/var\/www\/html/g' docker-compose.yml
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
      script:
      - DOCKER_ENV=stable make default-publish
      - DOCKER_ENV=stable make demo-publish
    - stage: "Build Docker Images (dev)"
      if: branch != master AND type IN (push, api, cron) AND fork = false
      before_install:
      - sudo apt-get update
      - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-engine
      - docker --version
      before_script:
      - sed -i -e 's/var\/www\/html:cached/var\/www\/html/g' docker-compose.yml
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
      script:
      - DOCKER_ENV=dev make default-publish
      - DOCKER_ENV=dev make demo-publish

